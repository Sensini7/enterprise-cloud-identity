name: "Entra: Set Activity Based Timeout Policy (Azure Portal)" 

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - '.github/workflows/ps-set-activity-based-timeout-policy-azure-portal.yml'
  ## This suppression will be removed once branch-driven Workflows have been completed
  workflow_dispatch:
    inputs:
      environment:
        required: true
        type: choice
        description: Environment to deploy to
        options:
          - sumvita-gov
          - kalvico-gov
          - sumvita
          - kalvico
      execute:
        required: true
        type: boolean
        description: Execute change
        default: false

permissions:
  id-token: write
  contents: read
  pull-requests: write

env:
  AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
  AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
  IS_AZURE_GOV: "${{ vars.IS_AZURE_GOV }}"
  ExecuteChange: "${{ inputs.execute || 'false'}}"

  AZURE_WEB_SESSION_IDLE_TIMEOUT: "${{ vars.AZURE_WEB_SESSION_IDLE_TIMEOUT }}"
jobs: 
  alert-upon-prod-deployment:
    if: ${{ inputs.environment == 'PROD' }}
    uses: ./.github/workflows/prod-deployment-alerts.yml
    with:
      environment: ${{ inputs.environment || vars.MANAGEMENT_TENANT_NAME_GOV }}
    secrets: inherit

  run-powershell-script:
    environment: ${{ inputs.environment || vars.MANAGEMENT_TENANT_NAME_GOV }}
    name: "Inactivity Timeout Policy"
    runs-on: ubuntu-latest

    steps:
      - name: Validate azure_portal_session_idle_timeout input
        shell: pwsh
        run: |
          $WebSessionIdleTimeout = $env:AZURE_WEB_SESSION_IDLE_TIMEOUT
          if ($WebSessionIdleTimeout -match '^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]$') {
            Write-Output "WebSessionIdleTimeout is valid"
          } else {
            Write-Error "WebSessionIdleTimeout is invalid. Please provide a valid duration in the format HH:MM:SS"
            exit 1
          }

      # Checkout the repository to the GitHub Actions runner
      - name: Checkout feature module
        uses: actions/checkout@v4
        with:
          repository: 'EasyDynamics/EntraID-800-53-Terraform-Modules'
          ref: '0.0.109'
          path: 'EZD.ECI.ActivityBasedTimeout'
          sparse-checkout: 'powershell-modules/EZD.ECI.ActivityBasedTimeout'
          ssh-key: ${{ secrets.MODULES_REPO_SSH_PRIVATE_KEY }}

      - name: Checkout common module
        uses: actions/checkout@v4
        with:
          repository: 'EasyDynamics/EntraID-800-53-Terraform-Modules'
          ref: '0.0.115'
          path: 'EZD.ECI.Common'
          sparse-checkout: 'powershell-modules/EZD.ECI.Common'
          ssh-key: ${{ secrets.MODULES_REPO_SSH_PRIVATE_KEY }}
          
      - name: Configure Activity Based Timeout Policy Policy (Azure Portal)
        shell: pwsh
        run: |
          # Install and import modules
          Import-Module .\EZD.ECI.Common\powershell-modules\EZD.ECI.Common\EZD.ECI.Common.psd1 -Force

          Connect-EciGraph

          Import-Module .\EZD.ECI.ActivityBasedTimeout\powershell-modules\EZD.ECI.ActivityBasedTimeout\EZD.ECI.ActivityBasedTimeout.psd1 -Force
          
          # Define variables
          $WebSessionidleTimeout = $env:AZURE_WEB_SESSION_IDLE_TIMEOUT
          $ExecuteChange = [System.Convert]::ToBoolean($env:ExecuteChange)

          # Configure Azure inactivity timeout settings
          Set-ActivityBasedTimeoutPolicy -WebSessionidleTimeout $env:AZURE_WEB_SESSION_IDLE_TIMEOUT -ExecuteChange:$ExecuteChange