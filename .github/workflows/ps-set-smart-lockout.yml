name: "Entra: Set Password Protection and Lockout Settings"

on: 
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - '.github/workflows/ps-set-smart-lockout.yml'
  workflow_dispatch:
    inputs:
      environment:
        required: true
        type: choice
        description: Environment to deploy to
        options:
          - sumvita-gov
          - kalvico-gov
          - sumvita
          - kalvico
      execute:
        required: true
        type: boolean
        description: Execute change
        default: false
        
permissions:
  id-token: write
  contents: read
  pull-requests: write

env:
  AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
  AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
  IS_AZURE_GOV: "${{ vars.IS_AZURE_GOV }}"
  ExecuteChange: "${{ inputs.execute || 'false'}}"

  BANNED_PASSWORD_CHECK_ONPREM_MODE: "${{ vars.BANNED_PASSWORD_CHECK_ONPREM_MODE }}"
  BANNED_PASSWORD_LIST: "${{ vars.BANNED_PASSWORD_LIST }}"
  ENABLE_BANNED_PASSWORD_CHECK: "${{ vars.ENABLE_BANNED_PASSWORD_CHECK }}"
  ENABLE_BANNED_PASSWORD_CHECK_ONPREM: "${{ vars.ENABLE_BANNED_PASSWORD_CHECK_ONPREM }}"
  LOCKOUT_DURATION_IN_SECONDS: ${{ vars.LOCKOUT_DURATION_IN_SECONDS }}
  LOCKOUT_THRESHOLD: ${{ vars.LOCKOUT_THRESHOLD }}

jobs: 
  alert-upon-prod-deployment:
    if: ${{ inputs.environment == 'PROD' }}
    uses: ./.github/workflows/prod-deployment-alerts.yml
    with:
      environment: ${{ inputs.environment || vars.MANAGEMENT_TENANT_NAME_GOV }}
    secrets: inherit

  run-powershell-script:
    environment: ${{ inputs.environment || vars.MANAGEMENT_TENANT_NAME_GOV }}
    name: "Set Password Protection and Lockout Settings"
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout feature module
        uses: actions/checkout@v4
        with:
          repository: 'EasyDynamics/EntraID-800-53-Terraform-Modules'
          ref: '0.0.115'
          path: 'EZD.ECI.DirectorySetting'
          sparse-checkout: 'powershell-modules/EZD.ECI.DirectorySetting'
          ssh-key: ${{ secrets.MODULES_REPO_SSH_PRIVATE_KEY }}

      - name: Checkout common module
        uses: actions/checkout@v4
        with:
          repository: 'EasyDynamics/EntraID-800-53-Terraform-Modules'
          ref: '0.0.115'
          path: 'EZD.ECI.Common'
          sparse-checkout: 'powershell-modules/EZD.ECI.Common'
          ssh-key: ${{ secrets.MODULES_REPO_SSH_PRIVATE_KEY }}

      - name: Authenticate and Set Password Protection and Lockout Settings
        shell: pwsh
        run: |
          # Install and import modules
          Install-Module Microsoft.Graph.Identity.DirectoryManagement -RequiredVersion 2.24.0 -Force
          Install-Module Microsoft.Graph.Beta.Identity.DirectoryManagement -RequiredVersion 2.24.0 -Force
          Install-Module Microsoft.Graph.Groups -RequiredVersion 2.24.0 -Force
          Import-Module .\EZD.ECI.Common\powershell-modules\EZD.ECI.Common\EZD.ECI.Common.psd1 -Force
          Connect-EciGraph
          
          Import-Module .\EZD.ECI.DirectorySetting\powershell-modules\EZD.ECI.DirectorySetting\EZD.ECI.DirectorySetting.psd1 -Force

          ## Must cast into booleans since GitHub Actions passes inputs explicitly as a string.
          ## This is the behavior regardless if they are labeled as boolean workflow inputs.
          $ExecuteChange = [System.Convert]::ToBoolean($env:ExecuteChange)

          # Write-Output "Setting smart lockout"
          Update-PasswordProtection `
            -BannedPasswordCheckOnPremisesMode $env:BANNED_PASSWORD_CHECK_ONPREM_MODE `
            -BannedPasswordList $env:BANNED_PASSWORD_LIST `
            -EnableBannedPasswordCheck $env:ENABLE_BANNED_PASSWORD_CHECK `
            -EnableBannedPasswordCheckOnPremises $env:ENABLE_BANNED_PASSWORD_CHECK_ONPREM `
            -LockoutDurationInSeconds $env:LOCKOUT_DURATION_IN_SECONDS `
            -LockoutThreshold $env:LOCKOUT_THRESHOLD `
            -ExecuteChange:$ExecuteChange